import static org.springframework.boot.gradle.SpringBootPluginExtension.LayoutType.*
buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://dl.bintray.com/ajay-kumar/plugins" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}


version "1.1.0-SNAPSHOT"

group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

apply from: 'https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/travis_grails_publish.gradle'

//grails {
//    exploded = true
//    plugins {
//        compile project(':images-client-plugin')
//    }
//}


repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://dl.bintray.com/relaximus/plugins" }
    maven { url "https://dl.bintray.com/sachinverma/plugins" }
    maven { url 'https://dl.bintray.com/agorapulse/libs' }
    maven { url 'https://dl.bintray.com/palantir/releases' } // docker-compose-rule is published on bintray
}

dependencies {

    compile ("org.springframework.boot:spring-boot-starter-logging")
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile group: 'org.grails.plugins', name: 'grails-pretty-time', version: '4.0.0'

    compile group: 'org.grails', name: 'grails-async'
    compile group: 'org.grails', name: 'grails-async-gpars'

    compile 'xml-apis:xml-apis:1.4.01'
    compile 'org.grails.plugins:csv:1.0.1'

    // ALA plugins
    compile group: 'org.grails.plugins', name: 'ala-ws-plugin', version: '2.0', changing: true
    compile group: 'org.grails.plugins', name: 'ala-bootstrap3', version: '3.2.1', changing: true
    compile group: 'org.grails.plugins', name: 'ala-admin-plugin', version: '2.2', changing: true
    compile group: 'org.grails.plugins', name: 'ala-auth', version: '3.2.2', changing: true
    compile group: 'au.org.ala.plugins.grails', name:'images-client-plugin', version: '1.1', changing: true

    // Added dependencies
    compile 'org.grails.plugins:cache-headers:2.0.2'
    compile 'org.grails.plugins:external-config:1.2.2'
    compile 'org.grails.plugins:quartz:2.0.13'
    compile group: 'org.locationtech.spatial4j', name: 'spatial4j', version: '0.7'
    compile group: 'org.locationtech.jts', name: 'jts-core', version: '1.15.0'
    compile "com.amazonaws:aws-java-sdk-s3:$amazonAwsSdkVersion"
    compile 'org.javaswift:joss:0.10.2'
    runtime 'org.postgresql:postgresql:42.2.9'
    compile 'org.elasticsearch:elasticsearch:7.0.1'
    compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.0.1'
    compile 'org.imgscalr:imgscalr-lib:4.2'
    compile 'org.apache.commons:commons-imaging:1.0-SNAPSHOT'
    compile 'org.apache.tika:tika-core:1.23'
    compile "org.flywaydb:flyway-core:4.2.0"
    compile 'com.github.jai-imageio:jai-imageio-core:1.4.0'
    compile 'au.org.ala:image-utils:1.9.0'
    compile 'org.grails.plugins:ala-ws-security-plugin:2.0.1'
    compile 'net.lingala.zip4j:zip4j:2.3.1'
    compile 'com.google.guava:guava:28.2-jre'
    compile 'org.apache.avro:avro:1.8.2'

    // Swagger
    compile 'org.grails.plugins:swagger:1.0.1'

    // Google analytics requirement
    compile 'com.google.api-client:google-api-client:1.25.0'
    compile 'com.google.apis:google-api-services-analytics:v3-rev134-1.22.0'    
    
    // Standard grails
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.zaxxer:HikariCP:3.4.2"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile 'com.opencsv:opencsv:4.2'
    compile 'org.apache.ant:ant:1.7.1'
    compile 'org.apache.ant:ant-launcher:1.7.1'
    compile group: 'org.codehaus.groovy', name: 'groovy-ant', version: '2.0.0'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.0'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'
    testCompile 'org.grails.plugins:embedded-postgres:1.1.2'
    testCompile 'cloud.localstack:localstack-utils:0.2.5'
    testCompile "com.amazonaws:aws-java-sdk:$amazonAwsSdkVersion" // full AWS SDK included in test scope for localstack config
    testCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:1.4.2'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


springBoot {
    buildInfo()
    layout = WAR
}

bootRepackage {
    enabled = true
    executable = true
    classifier = 'exec'
}

assets {
    minifyJs = true
    minifyCss = true
}
